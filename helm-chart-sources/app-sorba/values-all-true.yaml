# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
MQTT_HOST: "sorba-vernemq "
MQTT_TOPIC: "rtdb/ "
REDIS_HOST: "sorba-redis-master"
####
hdfs: '{ "user": "raj_ops", "host": "webhdfs", "port": 50070, "path": "/webhdfs/v1" }'
####
livy:  'http://livy:8998' 
webhdfs: '{ "host": "webhdfs", "port": 50070, "user": "raj_ops"  }' 
HOSTALIASES_SANDBOX_IP: '20.190.247.128'
####
OPENID_CONNECT: '{ "clientID": "rcL7a74UO6k2utUofBrwsXwHGsUa",   "clientSecret": "qffXfN6NsPVTeTsMtRhtJ4oFCHka",  "issuer": "https://sorba-is.abi.sorbapp.com/oauth2/token", "authorizationURL": "https://sorba-is.abi.sorbapp.com/oauth2/authorize",   "tokenURL": "https://sorba-is.abi.sorbapp.com/oauth2/token", "callbackURL": "https://ml-trainer.abi.sorbapp.com/callback", "skipUserProfile": true }'  
proxies: '{ "/api/ml-trainer": { "target": "http://ml-tainer-api-auto-deploy:5000", "pathRewrite": { "^/api/ml-trainer": "" }, "secure": false, "changeOrigin": true, "logLevel": "debug" }, "/api/preferences": { "target": "http://preferences-api-auto-deploy:5000", "pathRewrite": { "^/api/preferences": "" }, "secure": false, "changeOrigin": true, "logLevel": "debug" }, "/api/hot-data": { "target": "http://sorba-influxdb:8086", "pathRewrite": { "^/api/hot-data": "" }, "secure": false, "changeOrigin": true, "logLevel": "debug" } }' 
SESSION_SETTINGS: '{ "name": "ml-trainer-website", "secret": "XVxU40NEhvguJtLeax2L" }'
####
sequelizep: 'mysql://preferences:preferences@sorba-mariadb/preferences'
####
proxy: '{ "tree": { "path": "/tree", "remote": "http://tree-api-auto-deploy:5000" }, "ml-tariner-api": { "path": "/ml", "remote": "http://ml-tainer-api-auto-deploy:5000" }, "hdfs-api": { "path": "/hdfs", "remote": "http://hdfs-api-auto-deploy:5000" }  }'  
sequelizen: 'mysql://registry_api:registry_api@sorba-mariadb/registry_api'
####
OPENID_CONNECTp: '{ "clientID": "xeHQWIR7moFtC3Lf8vquCcWPmzwa" , "clientSecret": "nrqFwhosOwH2iAXUsL4x3AZPmdwa" , "issuer": "https://is.sorbasoft.net:443/oauth2/token", "authorizationURL": "https://is.sorbasoft.net/oauth2/authorize" , "tokenURL": "https://is.sorbasoft.net:443/oauth2/token", "callbackURL": "https://platform.afr-sorbapp.one.ofc.loc/callback", "skipUserProfile": true } '  
proxiesp: '{"/tree":{"target":"http://tree-api-auto-deploy:5000/","pathRewrite":{"^/tree":""}, "secure":false , "changeOrigin":true, "logLevel": "debug"}, "/uuid-gen":{"target":"http://uuid-gen-api-auto-deploy:5000","pathRewrite":{"^/uuid-gen":""}, "secure":false,"changeOrigin":true,"logLevel":"debug"}, "/ml-trainer":{"target":"http://ml-tainer-api-auto-deploy:5000","pathRewrite":{"^/ml-trainer":""}, "secure":false,"changeOrigin":true,"logLevel":"debug"},"/rtdb":{"target":"http://webdis:7379",  "pathRewrite":{"^/rtdb":""},"secure":false,"changeOrigin":true,"logLevel":"debug"} } ' 
SESSION_SETTINGSp: '{ "name": "platform-website", "secret": "jqHmJcoXvhn0kQVumnvQ" }'
####
influxm: '{ "host": "sorba-influxdb" }' 
mqttm: mqtt://sorba-vernemq:1883  
mqttTopicm: sorba
####


is-pattern-1:
  enabled: true
  wso2:
    deployment:
      wso2is:
        dockerRegistry: registry.desa.sorbapp.com/sorbotics/devops/wso2-alpine-is
        imageName: master
        imageTag: 623082f3d73e041f4b91c4545164f52a1176c482
        replicas: 1
        ingress:
          identity:
            hostname: "sorbais.prod.sczcps.site"
            annotations:
              kubernetes.io/ingress.class: "nginx"
              kubernetes.io/tls-acme: "true"
              nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
              nginx.ingress.kubernetes.io/affinity: "cookie"
              nginx.ingress.kubernetes.io/session-cookie-name: "route"
              nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
    dockerRegistry: registry.desa.sorbapp.com
    subscription:
      password: detargetni
      username: miguelciego
      email: miguelciego@gmail.com
redis:
  enabled: true
  cluster:
    enabled: true
    slaveCount: 0
  usePassword: false
  master:
    persistence:
      enabled: false
mariadb:
  enabled: true
  image:
    tag: 10.4.15-debian-10-r0
  auth:
    rootPassword: "sbrQp10"
uuid-gen-api:
  enabled: true
  releaseOverride: "uuid-gen-api"
rtdb-sync-pub:
  enabled: true
  releaseOverride: "rtdb-sync-pub"
  application:
    database_url: ""
    secretName: rtdb-sync-pub-secret
rtdb-sync-sub:
  enabled: true
  releaseOverride: "rtdb-sync-sub"
  application:
    database_url: ""
    secretName: rtdb-sync-sub-secret
influxdb:
  enabled: true
  auth:
    enabled: false
    admin:
      username: admin
      password: sbrQp1012345
hdfs-api:
  enabled: true
  releaseOverride: "hdfs-api"
  application:
    database_url: ""
    secretName: hdfs-api-secret
ml-trainer-api:
  enabled: true
  releaseOverride: "ml-trainer-api"
  application:
    database_url: "mariadb://ml_trainer:ml_trainer@sorba-mariadb/ml_trainer"
    secretName: ml-trainer-api-secret
ml-trainer-ui:
  enabled: true
  releaseOverride: "ml-trainer-ui"
  application:
    database_url: ""
    secretName: ml-trainer-ui-secret
  service:
    url: mltrainer.prod.sczcps.site 
preferences-api:
  enabled: true
  releaseOverride: "preferences-api"
  application:
    database_url: ""
    secretName: preferences-api-secret
tree-api:
  enabled: true
  releaseOverride: "tree-api"
  application:
    database_url: "mysql://registry_api:registry_api@sorba-mariadb/registry_api"
    secretName: 
ng-api-gateway:
  enabled: true
  releaseOverride: "ng-api-gateway"
  application:
    database_url: "mysql://registry_api:registry_api@sorba-mariadb/registry_api"
    secretName: ng-api-gateway-secret
  service:
    url: api-gateway.prod.sczcps.site
platform-ui:
  enabled: true
  releaseOverride: "platform-ui"
  application:
    database_url: ""
    secretName: platform-ui-secret
  service:
    url: platform-ui.prod.sczcps.site
mqtt-to-influxdb-2y:
  enabled: true
  releaseOverride: "mqtt-to-influxdb-2y"
  application:
    database_url: ""
    secretName: mqtt-to-influxdb-2y-secret
grafana:
  enabled: true
  admin:
    user: "admin"
    password: "sbrQp10"
  ingress:
    enabled: true
    certManager: true
    hostname: grafana.prod.sczcps.site
    path: /
    tls: true

vernemq:
  enabled: true
  replicaCount: 2
  service:
    type: LoadBalancer
    loadBalancerIP: 192.168.160.251
    mqtt:
      enabled: true
    mqtts:
      enabled: true
      port: 443
    annotations:
      service.beta.kubernetes.io/azure-load-balancer-internal: "true"
  secretMounts:
    - name: vernemq-certificates
      secretName: mosquitto-vernemq-local-tls
      path: /etc/ssl/vernemq
  additionalEnv:
    - name: DOCKER_VERNEMQ_ALLOW_REGISTER_DURING_NETSPLIT
      value: "on"
    - name: DOCKER_VERNEMQ_ALLOW_PUBLISH_DURING_NETSPLIT
      value: "on"
    - name: DOCKER_VERNEMQ_ALLOW_SUBSCRIBE_DURING_NETSPLIT
      value: "on"
    - name: DOCKER_VERNEMQ_ALLOW_UNSUBSCRIBE_DURING_NETSPLIT
      value: "on"
    - name: DOCKER_VERNEMQ_ALLOW_ANONYMOUS
      value: "on"
    - name: DOCKER_VERNEMQ_ACCEPT_EULA
      value: "yes"
    - name: DOCKER_VERNEMQ_LISTENER__SSL__CAFILE
      value: "/etc/ssl/vernemq/ca.crt"
    - name: DOCKER_VERNEMQ_LISTENER__SSL__CERTFILE
      value: "/etc/ssl/vernemq/tls.crt"
    - name: DOCKER_VERNEMQ_LISTENER__SSL__KEYFILE
      value: "/etc/ssl/vernemq/tls.key"



cakey: -----BEGIN CERTIFICATE-----
  MIIDqTCCApGgAwIBAgIJALDDp+Q4OZ2/MA0GCSqGSIb3DQEBCwUAMGsxCzAJBgNV
  BAYTAlVTMQswCQYDVQQIDAJGTDELMAkGA1UEBwwCTUkxCzAJBgNVBAoMAlNUMQsw
  CQYDVQQLDAJTVDELMAkGA1UEAwwCY2ExGzAZBgkqhkiG9w0BCQEWDGNhQGdtYWls
  LmNvbTAeFw0xNzAzMzAyMjE3MDdaFw0yMjAzMzAyMjE3MDdaMGsxCzAJBgNVBAYT
  AlVTMQswCQYDVQQIDAJGTDELMAkGA1UEBwwCTUkxCzAJBgNVBAoMAlNUMQswCQYD
  VQQLDAJTVDELMAkGA1UEAwwCY2ExGzAZBgkqhkiG9w0BCQEWDGNhQGdtYWlsLmNv
  bTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKDhGX6ar8IG7J2TMdFb
  GYgyTI8lQr70LPnNKMyDtAck+v9Dlbvrcfg075BcV2iDOhzY0U2gugEeQfLytwBP
  sM7/JJ9nDGx7RogeLm+DSSgSTXLEBtlO5J5/Y7aOQ8zeOG3Wd5SmACyvGQ1lmm6S
  Sgdcp5U+H03mxFhJ3ZtAfgaRo6psZ/fcLFuE6wjXOkxaNGA8xJv0rVjIo2GPrxiW
  MGACidt4P0FmuHrEUL8Pm9OPKep/0f2taZDhmEmPHANLLn7Joo7nozNGnwckFO46
  BRzP5FekJEjwA0ivKIqqJ+skxEyMBpfSc0L4YLLCXeqeFL7TL1Vny52fU7vfnCZO
  BVcCAwEAAaNQME4wHQYDVR0OBBYEFIxATI9sYSuVt1jIxdYWXl78ikmlMB8GA1Ud
  IwQYMBaAFIxATI9sYSuVt1jIxdYWXl78ikmlMAwGA1UdEwQFMAMBAf8wDQYJKoZI
  hvcNAQELBQADggEBAEYNi4gSSQz51jCEPvdzlm3YhGtaevwyvq7jRAsZO7Yq8Ely
  m/PlxGxSXgtGgh/ZKDdABNfHdIov//GL3nvOU2bwpJQ0hWh2p+NSHg9VBHxtXVOE
  3rxNUz5llgIOhECBIX4JKJijcQN/yUwUcuNls1Cwrg1y+QHgiVK5XDs9/GoMtHNK
  pRatljiYQIKcyZXAAJMSmoFMVhv89zfy0tseiB4oq14Hw3OOuS/ZsYlY7GJUvQaH
  bZz4RuT+egUK9Mp6Jhv77Wj9mVrCJoyOAkwogY02s+T6Z3a0CCrWLXWNCNjk+ZFF
  X73uoa4SgIxvrEzxmX8OSScMyu7U8wxRnNhrhu8=
  -----END CERTIFICATE-----

tlscrt: -----BEGIN CERTIFICATE-----
  MIIDWjCCAkICCQC7Vg3TJwI15DANBgkqhkiG9w0BAQsFADBrMQswCQYDVQQGEwJV
  UzELMAkGA1UECAwCRkwxCzAJBgNVBAcMAk1JMQswCQYDVQQKDAJTVDELMAkGA1UE
  CwwCU1QxCzAJBgNVBAMMAmNhMRswGQYJKoZIhvcNAQkBFgxjYUBnbWFpbC5jb20w
  HhcNMTcwMzMwMjIxOTIwWhcNMjcwMzI4MjIxOTIwWjBzMQswCQYDVQQGEwJVUzEL
  MAkGA1UECAwCRkwxCzAJBgNVBAcMAk1JMQswCQYDVQQKDAJTVDELMAkGA1UECwwC
  U1QxDzANBgNVBAMMBmJyb2tlcjEfMB0GCSqGSIb3DQEJARYQYnJva2VyQGdtYWls
  LmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOiuLT5EWA1dg6uG
  D3rDEsXhzBYO8PRqVSfstxlAChaz76njHOhzvIRFb9QkKqPp1uGRWTd+F/jDQZMn
  3NBKSA9shyZ5ETlcChe8vjuk7nF2o3mwaqjTNc9rkhJC5nYJp8Y4gqT5ddzonXAq
  LIo/pgTj/+ypo6E13+IEGfDf9SldbIjQ5V+6h3HpKYPb1mQ3gOyZAJViX21MnP20
  fqDa0StKJrT7fx2iaXeWn/ym4+mAYDP6R6BWKYQ7xnWIwFm5CXg/L5TVVZO6egH+
  V/JZqpPe+cM0agJgrlCRK4WlGLZJjtMfiTuGMo/s57NHhwL5xdZPDAxIn/GVI8gJ
  5rffZGUCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAQ9HHOv4EMloWMQw8/csf/qQK
  pQPQlE78qc/jag9PwHSkkuTON9TCDTkpXgILwdqx3UHsuHPOWm5g6gXczCBFpW5B
  nbAxF9NhmL4S/Zw5lrCs+ZHQIwjW9C1f8BeLrVFNLFRJqbcvBQDVEvM88meStBqr
  Jh05T7puAVOzLtW4T4qI40BbHauMgfbNKM+tKXlL5F+utASiByJtJldry6f0l1cz
  mWeY7gggBbZQ0VO0MbFTtjv5lK1BNsTaluZHajFKFq3l29JSRpruhi15A/cqI5Zk
  euHqG+Fsf8QITUaWn6lha5gr18a5ero2TM45H1ee8LFsEuFTtd28PK+R5SMeiw==
  -----END CERTIFICATE-----

tlskey: -----BEGIN RSA PRIVATE KEY-----
  MIIEowIBAAKCAQEA6K4tPkRYDV2Dq4YPesMSxeHMFg7w9GpVJ+y3GUAKFrPvqeMc
  6HO8hEVv1CQqo+nW4ZFZN34X+MNBkyfc0EpID2yHJnkROVwKF7y+O6TucXajebBq
  qNM1z2uSEkLmdgmnxjiCpPl13OidcCosij+mBOP/7KmjoTXf4gQZ8N/1KV1siNDl
  X7qHcekpg9vWZDeA7JkAlWJfbUyc/bR+oNrRK0omtPt/HaJpd5af/Kbj6YBgM/pH
  oFYphDvGdYjAWbkJeD8vlNVVk7p6Af5X8lmqk975wzRqAmCuUJErhaUYtkmO0x+J
  O4Yyj+zns0eHAvnF1k8MDEif8ZUjyAnmt99kZQIDAQABAoIBADvDaQmCQl+Ecmpe
  76Dnc+3xlhrgUZFlsmOj0E+i/DRimR84n1cxSu1qbFO/ylf5muCrFZBESeHyPOiQ
  J440VhfoFzqRhBQIiOsZ5n6pWTk5cLmzz2F3hm21QnqARnNw/W/TWfMHw/cupCmI
  G5KS0JCXA0gFNmsUzGFgDk2pKG4r/G6mhJmmDd9wBL9ENQFR49uvfm3Y8NgHFPHh
  O0tap5rMPiR5E2nvCBSgLAsK6P7h1sNfFgs1CWe3ddoRspmjORsSleknapwkBYYD
  ATkgiZzSbNno2rUViLJa84GbsBO/IFJP4TQhBWWzS1TG9OmafDJ4MH1MOgLU+jNr
  /r45tCECgYEA91vUtl6hVK0rWpNLDiq14eYvZGCKy6zfsxHsBlvOBuUyB6uCqfYB
  lSw/w/IWNG5UmG2gpQkY90KPJh8TFLpVka1TyI9x6VVZr8qmd7Bq2wALI+2zxJ+j
  vkIWpva4doSchiTo+Oz7hDs3oU/wkBs8kk8Q8DMeIaRGkrMNJjFBlhkCgYEA8M8T
  OGKeaharduUdTU3D6T9kc+4KzZquBUQYNDBWTqtxstW3EP++2Z9UmTpw/a9aWnR0
  xoX5+1vN2P7aGGbkh2Bn5a3YSVEuWW53DJ4wh4+hItQAWvUk1/fqOWvSIWOWEYZp
  AGQqFecyybW/qZ+tLMLmCeFGuvd4zKlmwDfkUi0CgYBcYHwo+2Auulk1g0qFaOfy
  DD/osbFD7TTBsFC/8ysXIiM0ABZVGN1wc00BBXjLbeTD5DUZTTN4q++/4d0DYa8x
  L1TZ0tBMvqY242yVyFmvne2LJmt7Y88H77B7/CnZgR7fbgtfY0lvEZpt8Oe7OaC+
  Vy7RNZXsJGiCwsGHYN/IiQKBgQCpj/YltvN7GjlkP9JRM5fmrreKFizPN8KffKJa
  ZUrwnDI0Td5Y/uwhCtskBg234/iIRwZPH9m1T6Bz0og5tIHofU7LYI0ymxI68Nit
  LtpXKiC5iHQzl/h4hl4MTsqorhnmfzGCkAU+ZQzTEcJCq2fiY95dSJ5oWodZ/VKX
  uQNxhQKBgDfz2OACKDxPndo0PtRJC2IogcwjJFTWMgDzazPGyc0vDN4dxCyN2sCZ
  aGaYEYbcJcPwNdzFLLY/3mdqqnUumw0/OccXFQCPjODZwF5C1b4NDzWgyT2OM2Eh
  DdMX6V9vqz2qMuAlDK1Y5FupBFIMEFvGDUKcwl+eonuJNqeVOy/A
  -----END RSA PRIVATE KEY-----







################---------------------###########################

replicaCount: 1
strategyType:
serviceAccountName:
image:
  repository: registry.desa.sorbapp.com/sorbotics/preferences-api/master
  tag: e224a0b4002b8bb1597c76487180139144d36f63
  pullPolicy: IfNotPresent
  secrets:
    - name: gitlab-registry
extraLabels: {}
podAnnotations: {}
nodeSelector: {}
tolerations: []
application:
  track: stable
  tier: web
  migrateCommand:
  initializeCommand:
  secretName:
  secretChecksum:
  database_url: "mysql://registry_api:registry_api@sorba-mariadb/registry_api"
hpa:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
gitlab:
  app:
  env:
  envName:
  envURL:
service:
  enabled: true
  annotations: {}
  name: web
  type: ClusterIP
  url: http://my.host.com/
  additionalHosts:
  commonName:
  externalPort: 5000
  internalPort: 5000
ingress:
  enabled: false
  path: "/"
  tls:
    enabled: true
    acme: true
    secretName: ""
    useDefaultSecret: false
  annotations:
    kubernetes.io/ingress.class: "nginx"
  modSecurity:
    enabled: false
    secRuleEngine: "DetectionOnly"
    # secRules:
    #   - variable: ""
    #     operator: ""
    #     action: ""
  canary:
    weight:
prometheus:
  metrics: false
livenessProbe:
  path: "/"
  initialDelaySeconds: 15
  timeoutSeconds: 15
  scheme: "HTTP"
  probeType: "httpGet"
readinessProbe:
  path: "/"
  initialDelaySeconds: 5
  timeoutSeconds: 3
  scheme: "HTTP"
  probeType: "httpGet"
postgresql:
  enabled: false
  managed: false
  managedClassSelector:
    #   matchLabels:
    #     stack: gitlab (This is an example. The labels should match the labels on the CloudSQLInstanceClass)

resources:
#  limits:
#    cpu: 100m
#    memory: 128Mi
  requests: {}
#    cpu: 100m
#    memory: 128Mi

## Configure PodDisruptionBudget
## ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
#
podDisruptionBudget:
  enabled: false
  # minAvailable: 1
  maxUnavailable: 1

## Configure NetworkPolicy
## ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
#
networkPolicy:
  enabled: false
  spec:
    podSelector:
      matchLabels: {}
    ingress:
    - from:
      - podSelector:
          matchLabels: {}
      - namespaceSelector:
          matchLabels:
            app.gitlab.com/managed_by: gitlab

workers: {}
  # worker:
  #   replicaCount: 1
  #   terminationGracePeriodSeconds: 60
  #   command:
  #   - /bin/herokuish
  #   - procfile
  #   - start
  #   - worker
  #   nodeSelector: {}
  #   tolerations: []
  #   livenessProbe:
  #     path: "/"
  #     initialDelaySeconds: 15
  #     timeoutSeconds: 15
  #     scheme: "HTTP"
  #     probeType: "httpGet"
  #   readinessProbe:
  #     path: "/"
  #     initialDelaySeconds: 5
  #     timeoutSeconds: 3
  #     scheme: "HTTP"
  #     probeType: "httpGet"
  #   preStopCommand:
  #   - /bin/herokuish
  #   - procfile
  #   - start
  #   - stop_worker
