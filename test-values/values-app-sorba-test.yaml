vernemq:
  enabled: false
cert-manager:
  enabled: true
  installCRDs: true
ingress-nginx:
  enabled: true
  controller:
    ingressClass: jkl-com-nginx
    ingressClassResource:
      name: jkl-com-nginx
kubernetes-dashboard:
  enabled: true
  ingress:
    enabled: true
    className: "jkl-com-nginx"
    annotations:
      kubernetes.io/tls-acme: 'true'
      cert-manager.io/issuer: jkl-com-issuer
      nginx.ingress.kubernetes.io/secure-backends: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    hosts:
      - kubernetes-dashboard.jkl-com.sorbapp.com
    tls:
      - secretName: kubernetes-dashboard-jkl-com-tls
        hosts:
          - kubernetes-dashboard.jkl-com.sorbapp.com
is-pattern-1:
  enabled: false
  wso2:
    deployment:
      wso2is:
        dockerRegistry: sorbaregistry.azurecr.io
        imageName: sorbotics/devops/wso2-alpine-is/master
        imageTag: latest
        imagePullSecrets: azure-registry
        replicas: 1
        resources:
          requests:
            memory: "2Gi"
            cpu: "1"
          limits:
            memory: "4Gi"
            cpu: "1"
        ingress:
          identity:
            hostname: "sorbais.jkl-com.sorbapp.com"
            annotations:
              cert-manager.io/issuer: jkl-com-issuer
              kubernetes.io/ingress.class: "jkl-com-nginx"
              kubernetes.io/tls-acme: "true"
              nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
              nginx.ingress.kubernetes.io/affinity: "cookie"
              nginx.ingress.kubernetes.io/session-cookie-name: "route"
              nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
    #subscription:
    #  password: password
    #  username: user
    #  email: admin@example.com
am-pattern-1:
##########   true  ###########
  enabled: true  
  wso2:
    deployment:
      dependencies:
        nfsServerProvisioner: false
      persistentRuntimeArtifacts:
        storageClass: default
      am:
        #dockerRegistry: sorbaregistry.azurecr.io
        #imageName: sorbotics/devops/wso2-alpine-am/master
        #imageTag: latest
        #imagePullSecrets: azure-registry
        replicas: 1
        resources:
          requests:
            memory: "2Gi"
            cpu: "2000m"
          limits:
            memory: "3Gi"
            cpu: "3000m"
        ingress:
          management:
            hostname: "am.jkl-com.sorbapp.com"
            annotations:
              cert-manager.io/issuer: jkl-com-issuer
              kubernetes.io/ingress.class: "jkl-com-nginx"
              kubernetes.io/tls-acme: "true"
              nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
              nginx.ingress.kubernetes.io/affinity: "cookie"
              nginx.ingress.kubernetes.io/session-cookie-name: "route"
              nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
          gateway:
            hostname: "gateway.jkl-com.sorbapp.com"
            annotations:
              cert-manager.io/issuer: jkl-com-issuer
              kubernetes.io/ingress.class: "jkl-com-nginx"
              nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          websub:
            hostname: "websub.jkl-com.sorbapp.com"
            annotations:
              cert-manager.io/issuer: jkl-com-issuer
              kubernetes.io/ingress.class: "jkl-com-nginx"
              nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      mi:
        replicas: 1
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        ingress:
          management:
            hostname: "management.jkl-com.sorbapp.com"
            annotations:
              cert-manager.io/issuer: jkl-com-issuer
              kubernetes.io/ingress.class: "jkl-com-nginx"
              nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
  mysql-am:
    mysql:
      persistence:
        storageClass: default
grafana:
  enabled: true
  image:
    registry: registry.desa.sorbapp.com
    repository: sorbotics/dashboard/dashboard-ui/master
    tag: latest
    pullPolicy: IfNotPresent
    pullSecrets: 
      - gitlab-registry
  admin:
    password: admin
    user: admin
  plugins: "isaozler-paretochart-panel, ae3e-plotly-panel"
  datasources:
    secretName: grafana-datasources
  config:
    useGrafanaIniFile: true
    grafanaIniSecret: grafana-ini
  ingress:
    annotations:
      cert-manager.io/issuer: jkl-com-issuer
      kubernetes.io/ingress.class: jkl-com-nginx
    enabled: true
    hostname: dashboard.jkl-com.sorbapp.com
    tls: true
    ingressClassName: null
mysql-sorba:
  enabled: true
  auth:
    rootPassword: "JgHO98XqnV"
    createDatabase: false
    password: "JgHO98XqnV"
phpmyadmin:
  enabled: true
  ingress:
    enabled: true
    tls: true
    certManager: true
    hostname: phpmyadmin.jkl-com.sorbapp.com
    ingressClassName: null
    annotations:
      cert-manager.io/issuer: jkl-com-issuer
      kubernetes.io/ingress.class: jkl-com-nginx
redis:
  enabled: true
  auth:
    enabled: false
  architecture: replication
  replica:
    replicaCount: 2
influxdb:
  enabled: true
tree-api:
  enabled: true
  application:
    env:
      DATABASE_URL: mysql://root:JgHO98XqnV@jkl-sorba-mysql-sorba/tree
      REDIS: '{"port": 6379, "host": "jkl-sorba-redis-master","db": 0,"reconnectTime": 5000}'
      CLOUD_GRAFANA_API: '{"URL":"http://jkl-sorba-grafana:3000/api","USER":"admin","PASS":"sbrQp10"}'
      HDFS_URL: http://192.168.1.94:3003
      LICENSE_DECODER: '{"port": 8074,"host": "sorbapp-license-decoder-auto-deploy-app-gitlab","endpoint": "/api/decode"}'
      SORBA_INTEGRATION_AUTHORIZATION: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IlNvcmJhIEludGVncmF0aW9uIiwiaWF0IjozNzM5NTcyMDAwMDB9.4A1X7l84wCJq7asgkGKaoYizlNBHnwGBm9Ex-YZRRzg'
      SORBA_INTEGRATION_URL: http://sorbapp-sorba-dashboard-comm-auto-deploy-app-gitlab:5000
  image:
    repository: registry.desa.sorbapp.com/sorbotics/platform/tree-api/new-generation
    tag: latest
    pullPolicy: IfNotPresent
    secrets:
      - name: gitlab-registry 
  persistence:
    enabled: true
    volumes:
      - name: sorba-data
        mount:
          path: "/srv"
          # subPath: "/pvc-mount/config.txt"
        claimName: jkl-com-sorba-data 
        claim:
          accessMode: ReadWriteMany
          size: 8Gi
          storageClass: "azurefile"
#  resources:
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
#    requests: {}
  #    cpu: 100m
  #    memory: 128Mi
uuid-gen-api:
  enabled: true
#  image:
#    repository: sorbaregistry.azurecr.io/sorbotics/uuid-gen-api
#    tag: latest
#    pullPolicy: IfNotPresent
#    secrets:
#      - name: azure-registry 
events-middleware:
  enabled: true
identity-api:
##########   true  ###########
  enabled: true
  image:
    repository: registry.desa.sorbapp.com/sorbotics/sorba-identity/sorba-identity-api-ng/main
    tag: 369bd0049d11919172917b5fbfba65c577de3feb
    pullPolicy: IfNotPresent
    secrets:
      - name: gitlab-registry
  application:
    env:
      APIM_URL: https://wso2am-pattern-1-am-service:9443
      API_GATEWAY: http://jkl-sorba-identity-api:5000/api
      API_MANAGER_PASSWORD: admin
      API_MANAGER_USER: admin
      DEPLOY_TYPE: cloud
      MYSQL_HOST: jkl-sorba-mysql-sorba
      MYSQL_PASSWORD: JgHO98XqnV
      SERVICES_NAME: '{"tree-api": "jkl-sorba-tree-api",
								  "identity-api":"jkl-sorba-identity-api",
								  "oee-api": "jkl-sorba-oee-engine",
								  "sde-socket-api": "jkl-sorba-sde-socket",
								  "ml-api": "jkl-sorba-ml-trainer-api",
								  "vib-visualizer-api": "localhost",
								  "vpn-api": "localhost",
								  "task-flow": "jkl-sorba-task-flows-backend"}'
identity-ui:
##########   true  ###########
  enabled: true
  image:
    repository: registry.desa.sorbapp.com/sorbotics/sorba-identity/sorba-identity-ui-ng/main
    tag: latest
    pullPolicy: IfNotPresent
    secrets:
      - name: gitlab-registry
  application:
    env:
      PORT: 5000
      deployType: cloud
      identityServiceAPI: null
      identityURL: http://jkl-sorba-identity-api:5000/api
      influxdb: '{"host":"jkl-sorba-influxdb","db":"sorba_carbon___super","measurement":"__SYSTEM_EVENTS","port": 8086}'
      page: '{ "title":"Sorba Identity UI","location":"","message":"Identity Server"}'
      redis: '{"host":"jkl-sorba-redis-master","port": 6379}'
      socketUrl: wss://websoc.jkl-com.sorbapp.com/websocket
      proxies: '{"/tree":{"target":"http://jkl-sorba-tree-api:5000/","pathRewrite":{"^/tree":""},"secure":false,"changeOrigin":true,"logLevel":"debug"},"/influx":{"target":"http://jkl-sorba-influxdb:8086","pathRewrite":{"^/influx":""},"secure":false,"logLevel":"debug","changeOrigin":true},"/api/commands":{"target":"https://wso2am-pattern-1-am-service:8243/socket/v1/commands","pathRewrite":{"^/api/commands":""},"secure":false,"logLevel":"debug","changeOrigin":true},"/identity":{"target":"https://wso2am-pattern-1-am-service:8243/identity/v1","pathRewrite":{"^/identity":""},"secure":false,"changeOrigin":true,"logLevel":"debug"}}'
      apps: '[{"name":"IoT Unified","link":"https://platform.jkl-com.sorbapp.com","disabled":false},{"name":"Dashboard","link":"https://dashboard.jkl-com.sorbapp.com","disabled":false},{"name":"Production Performance Analyzer","link":"https://oee.jkl-com.sorbapp.com","disabled":false},{"name":"Task Flow","link":"https://taskflow.jkl-com.sorbapp.com","disabled":false},{"name":"Machine Learning Trainer","link":"https://ml.jkl-com.sorbapp.com","disabled":false},{"name":"Virtual Private Network","link":"https://vpn.jkl-com.sorbapp.com","disabled":false}]'
  ingress:
    enabled: true
    annotations:
      cert-manager.io/issuer: jkl-com-issuer
      kubernetes.io/ingress.class: "jkl-com-nginx"
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: '0'
      nginx.ingress.kubernetes.io/proxy-buffering: 'off'   
  service:
    url: http://identity.jkl-com.sorbapp.com
messages-mediator:
  enabled: true
ml-trainer-api:
##########   true  ###########
  enabled: true
  image:
    repository: registry.desa.sorbapp.com/sorbotics/ml-trainer/ml-trainer-api/development
    tag: latest
    pullPolicy: IfNotPresent
    secrets:
      - name: gitlab-registry
  application:
    env:
      MLAPI: http://jkl-sorba-ml-trainer-api.jkl-com:5000
      DEPLOY_TYPE: "CLOUD"
      tenant: "demo.com"
      DATABASE_URL: '{ "database": "ml_trainer", "username": "root", "password": "JgHO98XqnV", "host": "jkl-sorba-mysql-sorba", "dialect": "mysql", "logging": false }'
      fsEntryPoint: "/srv"
      REDIS: '{ "useDefaults": "false", "host": "jkl-sorba-redis-master.jkl-com", "port": "6379", "db": "0", "user": "", "password": "","reconnectTime": 5000 }'
      STORAGE: '{ "useDefaults": "false", "url": "http://jkl-sorba-influxdb.jkl-com:8086", "db": "sorba_ml", "batch_size": 1000, "user": "", "password": "", "version": "1.x", "bucket": "", "token": "", "org": "" }'
      DATASOURCE: '{ "useDefaults": "true", "url": "http://jkl-sorba-influxdb.jkl-com:8086", "db": "sorba_ml", "batch_size": 1000, "user": "", "password": "", "version": "1.x", "bucket": "", "token": "", "org": "" }'
      TREE: '{ "useDefaults": "false", "url": "http://jkl-sorba-tree-api:5000/" }'
      DASHBOARD: '{ "useDefaults": "false", "URL": "https://dashboard.jkl-com.sorbapp.com/api", "host": "", "port": 3000, "user": "admin", "password": "admin", "org": "main" }'
      RAY: '{"cluster_mode":true,"master_address":"ray://raycluster-autoscaler-head-svc.default","cluster_http":"http://raycluster-autoscaler-head-svc.default:8265","masters":["http://jkl-sorba-ml-trainer-api.jkl-com:5000"],"workers":[],"useDefaults":false}'
  persistence:
    enabled: true
    volumes:
      - name: sorba-data
        mount:
          path: "/srv"
          # subPath: "/pvc-mount/config.txt"
        claimName: jkl-com-sorba-data 
        claim:
          accessMode: ReadWriteMany
          size: 8Gi
          storageClass: "azurefile"
ml-ui:
##########   true  ###########
  enabled: true
  image:
    repository: registry.desa.sorbapp.com/sorbotics/ml-trainer/ml-ui/master
    tag: latest
    pullPolicy: IfNotPresent
    secrets:
      - name: gitlab-registry
  application:
    env:
      proxies: '{"/api/commands/*":{"target":"https://websoc.jkl-com.sorba.ai/api/commands","pathRewrite":{"^/api/commands":""},
          "secure":false,"logLevel":"debug","changeOrigin":true},
          "/api/tree/*":{"target":"https://wso2am-pattern-1-am-service:8243/tree/v1/","pathRewrite":{"^/api/tree":""},
           "secure":false,"logLevel":"debug","changeOrigin":true},
           "/api/mlapi/*":{"target":"https://wso2am-pattern-1-am-service:8243/ml/v1","pathRewrite":{"^/api/mlapi":""},
           "secure":false,"logLevel":"debug","changeOrigin":true},
           "/api/influx/*":{"target":"http://jkl-sorba-influxdb:8086","pathRewrite":{"^/api/influx":""},
           "secure":false,"logLevel":"debug","changeOrigin":true},
           "/identity-server/*":{"target": "https://wso2am-pattern-1-am-service:8243/identity/v1/","pathRewrite": {"^/identity-server": ""},
           "secure": false,"changeOrigin":true,"logLevel": "debug"}}'
      redis: '{"port": 6379, "host": "jkl-sorba-redis-master","db": 0,"reconnectTime": 5000}'
      identityServiceAPI: https://wso2am-pattern-1-am-service:8243/identity/v1
      identityURL: http://jkl-sorba-identity-api:5000/api
      page: '{"title":"Sorba - Machine Learning","location":"","message":"Machine Learning Trainer"}'
      deployType: cloud
      PORT: '5000'
      apps: '[{"name":"IoT Unified","link":"https://platform.jkl-com.sorbapp.com","disabled":false},{"name":"Dashboard","link":"https://dashboard.jkl-com.sorbapp.com","disabled":false},{"name":"Production Performance Analyzer","link":"https://oee.jkl-com.sorbapp.com","disabled":false},{"name":"Task Flow","link":"https://taskflow.jkl-com.sorbapp.com","disabled":false},{"name":"Identity","link":"https://identity.jkl-com.sorbapp.com","disabled":false},{"name":"Virtual Private Network","link":"https://vpn.jkl-com.sorbapp.com","disabled":false}]'
      venvLocalPath: ""
      influxdb: '{"host": "jkl-sorba-influxdb", "db": "sorba_carbon___super", "measurement": "__SYSTEM_EVENTS", "port": 8086 }'
  ingress:
    enabled: true
    annotations:
      cert-manager.io/issuer: jkl-com-issuer
      kubernetes.io/ingress.class: "jkl-com-nginx"
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: '0'
      nginx.ingress.kubernetes.io/proxy-buffering: 'off'   
  service:
    url: http://ml.jkl-com.sorbapp.com
oee-engine:
  enabled: true
oee-ui:
  enabled: true
  ingress:
    enabled: true
    annotations:
      cert-manager.io/issuer: jkl-com-issuer
      kubernetes.io/ingress.class: "jkl-com-nginx"
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: '0'
      nginx.ingress.kubernetes.io/proxy-buffering: 'off' 
  service:
    url: http://oee.jkl-com.sorbapp.com
rtdb-sync-pub:
  enabled: true
rtdb-sync-sub:
  enabled: true
sde-socket:
##########   true  ###########
  enabled: true
  image:
    repository: sorbaregistry.azurecr.io/sorbotics/sde-socket/master
    tag: latest
    pullPolicy: IfNotPresent
    secrets:
      - name: gitlab-registry
  application:  
    env:
      JWT_SECRET: eShVmYq3t6w9z$C&F)J@McQfTjWnZr4u7x!A%D*G-KaPdRgUkXp2s5v8y/B?E(H+MbQeThVmYq3t6w9z$C&F)J@NcRfUjXnZr4u7x!A%D*G-KaPdSgVkYp3s5v8y/B?E
      REDIS_HOST: jkl-sorba-redis-master
      REDIS_PORT: 6379
      deployType: cloud
      identityServiceAPI: https://wso2am-pattern-1-am-service:8243
      npm_package_name: event-middleware
  ingress:
    enabled: true
    annotations:
      cert-manager.io/issuer: jkl-com-issuer
      kubernetes.io/ingress.class: "jkl-com-nginx"
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: '0'
      nginx.ingress.kubernetes.io/proxy-buffering: 'off'   
  service:
    url: http://websoc.jkl-com.sorbapp.com
task-flows-backend:
##########   true  ###########
  enabled: true
  image:
    repository: registry.desa.sorbapp.com/sorbotics/sorba-task-flows/task-flows-backend/master
    tag: latest
    pullPolicy: IfNotPresent
    secrets:
      - name: gitlab-registry
  application:
    env:
      DB_URI: mysql://root:JgHO98XqnV@jkl-sorba-mysql-sorba/task_flow
      DEPLOY_TYPE: cloud
      PORT: 5000
      REDIS: '{"host":"jkl-sorba-redis-master", "port": 6379}'
      TREE_URL: http://jkl-sorba-tree-api:5000
      proxy: '{"tree":{"path":"/tree","remote":"http://jkl-sorba-tree-api:5000/"},"hdfs":{"path":"/","remote":"http://192.168.1.94:3003/"}}'
  persistence:
    enabled: true
    volumes:
      - name: sorba-data
        mount:
          path: "/srv"
          # subPath: "/pvc-mount/config.txt"
        claimName: jkl-com-sorba-data 
        claim:
          accessMode: ReadWriteMany
          size: 8Gi
          storageClass: "azurefile"
task-flows-frontend:
##########   true  ###########
  enabled: true
  image:
    repository: registry.desa.sorbapp.com/sorbotics/sorba-task-flows/task-flows-frontend/main
    tag: latest
    pullPolicy: IfNotPresent
    secrets:
      - name: gitlab-registry
  application:
    env:
      PORT: 5000
      deployType: cloud
      identityServiceAPI: null
      identityURL: http://jkl-sorba-identity-api:5000/api
      influxdb: '{"host":"jkl-sorba-influxdb","db":"sorba_carbon___super","measurement":"__SYSTEM_EVENTS","port": 8086}'
      page: '{ "title":"Sorba Task Flow","location":"","message":"Task Flow"}'
      proxies: '{"/tree":{"target":"http://jkl-sorba-tree-api:5000/","pathRewrite":{"^/tree":""},"secure":false,"changeOrigin":true,"logLevel":"debug"},"/taskflow":{"target":"https://wso2am-pattern-1-am-service:8243/taskflow/v1","pathRewrite":{"^/taskflow":""},"secure":false,"changeOrigin":true,"logLevel":"debug"},"/influx":{"target":"http://jkl-sorba-influxdb:8086","pathRewrite":{"^/influx":""},"secure":false,"logLevel":"debug","changeOrigin":true},"/identity":{"target":"https://wso2am-pattern-1-am-service:8243/identity/v1","pathRewrite":{"^/identity":""},"secure":false,"changeOrigin":true,"logLevel":"debug"}}'
      redis: '{"host":"jkl-sorba-redis-master","port": 6379}'
      socketUrl: wss://websoc.jkl-com.sorbapp.com/websocket
      apps: '[{"name":"IoT Unified","link":"https://platform.jkl-com.sorbapp.com","disabled":false},{"name":"Dashboard","link":"https://dashboard.jkl-com.sorbapp.com","disabled":false},{"name":"Machine Learning Trainer","link":"https://ml.jkl-com.sorbapp.com","disabled":false},{"name":"Production Performance Analyzer","link":"https://oee.jkl-com.sorbapp.com","disabled":false},{"name":"Identity","link":"https://identity.jkl-com.sorbapp.com","disabled":false},{"name":"Virtual Private Network","link":"https://vpn.jkl-com.sorbapp.com","disabled":false}]'
  ingress:
    enabled: true
    annotations:
      cert-manager.io/issuer: jkl-com-issuer
      kubernetes.io/ingress.class: "jkl-com-nginx"
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: '0'
      nginx.ingress.kubernetes.io/proxy-buffering: 'off'   
  service:
    url: http://taskflow.jkl-com.sorbapp.com
platform-ui:
##########   true  ###########
  enabled: true
  image:
    repository: registry.desa.sorbapp.com/sorbotics/platform-ui-test-20-08/pre-release
    tag: latest
    pullPolicy: IfNotPresent
    secrets:
      - name: gitlab-registry
  application:
    env:
      OPENID_CONNECT: '{ "clientID": "gq0aTATyGOf4sRXggyQjwJ1V6hka", "clientSecret": "UtQmCLX5Y_cTsfqwW2wgVTw8oOEa", 
        "issuer": "https://sorbais.jkl-com.sorbapp.com:443/oauth2/token", 
        "authorizationURL": "https://sorbais.jkl-com.sorbapp.com/oauth2/authorize", 
        "tokenURL": "https://sorbais.jkl-com.sorbapp.com/oauth2/token", 
        "callbackURL": "https://platform.jkl-com.sorbapp.com/callback", "skipUserProfile": true }'
      SESSION_SETTINGS: '{ "name": "platform-website", "secret": "jqHmJcoXvhn0kQVumnvQ" }'
      apps: '[{"name":"Dashboard","link":"https://dashboard.jkl-com.sorbapp.com","disabled":false},{"name":"Machine Learning Trainer","link":"https://ml.jkl-com.sorbapp.com","disabled":false},{"name":"Production Performance Analyzer","link":"https://oee.jkl-com.sorbapp.com","disabled":false},{"name":"Task Flow","link":"https://taskflow.jkl-com.sorbapp.com","disabled":false},{"name":"Identity","link":"https://identity.jkl-com.sorbapp.com","disabled":false},{"name":"Virtual Private Network","link":"https://vpn.jkl-com.sorbapp.com","disabled":false}]'
      deployType: cloud
      googleMapsKey: AIzaSyBNj7leq6sjqp-cjKZscq6AjlHCT4vS_YM
      googleMapsURL: https://maps.googleapis.com/maps/api/js
      identityURL: https://wso2am-pattern-1-am-service:8243/identity/v1
      influxdb: '{"host":"jkl-sorba-inluxdb","db":"sorba_demo___com","measurement":"__SYSTEM_EVENTS","port": 8086}'
      proxies: '{"/identity-server":{"target":"https://wso2am-pattern-1-am-service:8243/identity/v1/","pathRewrite":{"^/identity-server":""},"secure":false,"changeOrigin":true,"logLevel":"debug"},"/tree":{"target":"https://wso2am-pattern-1-am-service:8243/tree/v1/","pathRewrite":{"^/tree":""},"secure":false,"changeOrigin":true,"logLevel":"debug"},"/devices":{"target":"http://sorbotics-sorba-collector-api.prod.sorbapp.com","pathRewrite":{"^/devices":""},"secure":false,"changeOrigin":true,"logLevel":"debug"},"/uuid-gen":{"target":"http://jkl-sorba-uuid-gen-api:5000","pathRewrite":{"^/uuid-gen":""},"secure":false,"changeOrigin":true,"logLevel":"debug"},"/asset":{"target":"http://sorbotics-sorba-asset-api.prod.sorbapp.com","pathRewrite":{"^/asset":""},"secure":false,"changeOrigin":true,"logLevel":"debug"},"/ml-trainer":{"target":"http://jkl-sorba-ml-trainer-api:5000","pathRewrite":{"^/ml-trainer":""},"secure":false,"changeOrigin":true,"logLevel":"debug"},"/rtdb":{"target":"http://webdis:7379","pathRewrite":{"^/rtdb":""},"secure":false,"changeOrigin":true,"logLevel":"debug"},"/hdfs-api":{"target":"http://sorbotics-ml-trainer-hdfs-api.prod.sorbapp.com","pathRewrite":{"^/hdfs-api":""},"secure":false,"changeOrigin":true,"logLevel":"debug"},"/api/commands/*":{"target":"https://websoc.demo-com.sorba.ai/api/commands","pathRewrite":{"^/api/commands":""},"secure":false,"logLevel":"debug","changeOrigin":true},"/api/influx/*":{"target":"http://jkl-sorba.influxdb:8086","pathRewrite":{"^/api/influx":""},"secure":false,"logLevel":"debug","changeOrigin":true}}'
      redis: '{"host": "jkl-sorba-redis-master", "port": 6379}'
      sideMenu: '[{"group":"","items":[{"label":"Overview","link":"/overview","icon":"ionicons:home-outline","alias":"Overview"},{"label":"Workspace","link":"/workspace","icon":"ionicons:grid-outline","alias":"Workspace"},{"label":"Dashboard","link":"/dashboard","icon":"ionicons:speedometer-outline","alias":"Dashboard","external":true,"disabled":false,"package":"grafana"},{"label":"Workflow","link":"/workflow","icon":"ionicons:shuffle-outline","alias":"Workflow","external":true,"disabled":true,"package":"sdc-workflow"}]},{"group":"Packages","items":[{"label":"ML Trainer","link":"/mlui","icon":"ionicons:hardware-chip-outline","alias":"MLTrainer","external":true,"disabled":true,"package":"ml-standalone-all"}]},{"group":"Settings","items":[{"label":"Identity Server","link":"/identity","icon":"ionicons:finger-print-outline","alias":"IdentityServer","external":true,"disabled":false,"package":"identity-service"},{"label":"Remote Access","link":"https://vpn.demo-com.sorba.ai","alias":"RemoteAccess","icon":"ionicons:key-outline"},{"label":"System Events","link":"/events","alias":"SystemEvents","icon":"ionicons:pulse-outline"}]}]'
      socketUrl: wss://websoc.jkl-com.sorbapp.com/websocket
      survey: '{"mainQuestion":"Do you like our new user interface?","secondaryQuestion": "How can we improve it?"}'
      tenant: demo.com
  ingress:
    enabled: true
    annotations:
      cert-manager.io/issuer: jkl-com-issuer
      kubernetes.io/ingress.class: "jkl-com-nginx"
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: '0'
      nginx.ingress.kubernetes.io/proxy-buffering: 'off'   
  service:
    url: http://platform.jkl-com.sorbapp.com
vpn-spa:
  enabled: true
  image:
    pullPolicy: IfNotPresent
    repository: registry.desa.sorbapp.com/sorbotics/vpn/vpn-spa/development
    secrets:
    - name: gitlab-registry
    tag: latest
  application:
    env:
      database_url: mysql://root:4mz5IrvhZb@jkl-sorba-mysql-sorba/tree
      redis: '{"port": 6379, "host": "jkl-sorba-redis-master","db": 0,"reconnectTime":5000}'
      identityServiceAPI: null
      identityURL: http://jkl-sorba-identity-api:5000/api
      proxies: '{"/identity-server":{"target":"https://wso2am-pattern-1-am-service:8243/identity/v1/","pathRewrite":{"^/identity-server":""},"secure":false,"changeOrigin":true,"logLevel":"debug"},"/api/tree":{"target":"https://wso2am-pattern-1-am-service:8243/tree/v1/","pathRewrite":{"^/api/tree":""},"secure":false,"changeOrigin":true,"logLevel":"debug"},"/api/vpnservice":{"target":"http://52.191.30.247/","pathRewrite":{"^/api/vpnservice":""},"secure":false,"changeOrigin":true,"logLevel":"debug"},"/api/commands":{"target":"https://websoc.demo-com.sorba.ai/api/commands","pathRewrite":{"^/api/commands":""},"secure":false,"changeOrigin":true,"logLevel":"debug"},"/api/influx":{"target":"http://jkl-sorba-influxdb:8086","pathRewrite":{"^/api/influx":""},"secure":false,"changeOrigin":true,"logLevel":"debug"},"/api/rtdb":{"target":"http://webdis:7379","pathRewrite":{"^/api/rtdb":""},"secure":false,"changeOrigin":true,"logLevel":"debug"}}'
      socketUrl: wss://websoc.jkl-com.sorbapp.com/websocket
      apps: '[{"name":"IoT Unified","link":"https://platform.jkl-com.sorbapp.com","disabled":false},{"name":"Dashboard","link":"https://dashboard.jkl-com.sorbapp.com","disabled":false},{"name":"Machine Learning Trainer","link":"https://ml.jkl-com.sorbapp.com","disabled":false},{"name":"Production Performance Analyzer","link":"https://oee.jkl-com.sorbapp.com","disabled":false},{"name":"Task Flow","link":"https://taskflow.jkl-com.sorbapp.com","disabled":false},{"name":"Identity","link":"https://identity.jkl-com.sorbapp.com","disabled":false}]'
  ingress:
  ingress:
    enabled: true
    annotations:
      cert-manager.io/issuer: jkl-com-issuer
      kubernetes.io/ingress.class: "jkl-com-nginx"
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: '0'
      nginx.ingress.kubernetes.io/proxy-buffering: 'off'   
  service:
    url: http://vpn.jkl-com.sorbapp.com